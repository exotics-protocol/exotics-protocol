{
  "address": "0xd0c6A1Aff8505f5BF2596AE9d0C317FAAc59a6F5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_game",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "game",
          "type": "address"
        }
      ],
      "name": "GameUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "RateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "RewardTokenSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "betAmount",
          "type": "uint256"
        }
      ],
      "name": "addReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "available",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "claimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "game",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sweep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_game",
          "type": "address"
        }
      ],
      "name": "updateGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newRate",
          "type": "uint256"
        }
      ],
      "name": "updateRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "xtc",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x11b7362407b7a2004b52f8ed5f971dc183b8c22d82d9b2d74247e1b9f82f6de2",
  "receipt": {
    "to": null,
    "from": "0x1604F1c0aF9765D940519cd2593292b3cE3Ba3CE",
    "contractAddress": "0xd0c6A1Aff8505f5BF2596AE9d0C317FAAc59a6F5",
    "transactionIndex": 1,
    "gasUsed": "674295",
    "logsBloom": "0x
    "blockHash": "0xd728a774113420ab4e2acbb78645446deed8d68e8e6bcc9a81f2deed205d544a",
    "transactionHash": "0x11b7362407b7a2004b52f8ed5f971dc183b8c22d82d9b2d74247e1b9f82f6de2",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 11373341,
        "transactionHash": "0x11b7362407b7a2004b52f8ed5f971dc183b8c22d82d9b2d74247e1b9f82f6de2",
        "address": "0xd0c6A1Aff8505f5BF2596AE9d0C317FAAc59a6F5",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001604f1c0af9765d940519cd2593292b3ce3ba3ce"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xd728a774113420ab4e2acbb78645446deed8d68e8e6bcc9a81f2deed205d544a"
      }
    ],
    "blockNumber": 11373341,
    "cumulativeGasUsed": "721370",
    "status": 1,
    "byzantium": true
  },
  "args": [
    10000,
    "0x1C03CDF9F591d4f4725a1564Cc4D9b8C73856Aa8"
  ],
  "numDeployments": 1,
  "solcInputHash": "dcf28716aadc2645d6721c58d4432e66",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_game\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"}],\"name\":\"GameUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"RateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"RewardTokenSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"}],\"name\":\"addReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"available\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"game\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_game\",\"type\":\"address\"}],\"name\":\"updateGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newRate\",\"type\":\"uint256\"}],\"name\":\"updateRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xtc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"sweep()\":{\"notice\":\"Remove all incentive tokens from this contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Reward.sol\":\"Rewarder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Reward.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n\\ncontract Rewarder is Ownable {\\n\\n    mapping(address => uint256) public available;\\n    mapping(address => uint256) public claimed;\\n\\n    IERC20 public xtc;\\n    uint256 public rate;  // in bps\\n    address public game;\\n\\n    event RateUpdated(uint256 rate);\\n    event GameUpdated(address indexed game);\\n    event RewardTokenSet(address indexed token);\\n\\n    constructor(uint256 _rate, address _game) {\\n        rate = _rate;\\n        game = _game;\\n    }\\n\\n    function setToken(IERC20 _token) external onlyOwner {\\n        require(address(_token) != address(0), \\\"Reward token can't be 0 address\\\");\\n        xtc = _token;\\n        emit RewardTokenSet(address(_token));\\n    }\\n\\n    function claim() external {\\n        uint256 _claimable = available[msg.sender] - claimed[msg.sender];\\n        claimed[msg.sender] += _claimable;\\n        require(xtc.transfer(msg.sender, _claimable), \\\"failed to send\\\");\\n    }\\n\\n    function claimable(address user) external view returns (uint256) {\\n        return available[user] - claimed[user];\\n    }\\n\\n    function addReward(address user, uint256 betAmount) external {\\n        require(msg.sender == game, \\\"Caller not game\\\");\\n        available[user] += betAmount * rate / 10000;\\n    }\\n\\n    /// @notice Remove all incentive tokens from this contract.\\n    function sweep() external onlyOwner {\\n        require(xtc.transfer(msg.sender, xtc.balanceOf(address(this))), \\\"failed to sweep\\\");\\n    }\\n\\n    function updateRate(uint256 _newRate) external onlyOwner {\\n        rate = _newRate;\\n        emit RateUpdated(_newRate);\\n    }\\n\\n    function updateGame(address _game) external onlyOwner {\\n        game = _game;\\n        emit GameUpdated(_game);\\n    }\\n\\n}\\n\",\"keccak256\":\"0xc160036878223599b045fc1f1ea7e5763f203d94ca21b326a3f8cc0c87c1a027\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610af4380380610af483398101604081905261002f916100b2565b61003833610062565b600491909155600580546001600160a01b0319166001600160a01b039092169190911790556100ef565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100c557600080fd5b825160208401519092506001600160a01b03811681146100e457600080fd5b809150509250929050565b6109f6806100fe6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80634e71d92d116100975780639feb8f50116100665780639feb8f50146101d8578063c3fe3e28146101eb578063c884ef83146101fe578063f2fde38b1461021e57600080fd5b80634e71d92d146101a457806369ea1771146101ac578063715018a6146101bf5780638da5cb5b146101c757600080fd5b80632c4e722e116100d35780632c4e722e1461015557806335faa4161461015e578063402914f51461016657806347f6f34a1461017957600080fd5b80630b79736e146100fa57806310098ad51461010f578063144fa6d714610142575b600080fd5b61010d610108366004610881565b610231565b005b61012f61011d366004610881565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b61010d610150366004610881565b610290565b61012f60045481565b61010d61034a565b61012f610174366004610881565b6104d4565b60035461018c906001600160a01b031681565b6040516001600160a01b039091168152602001610139565b61010d610508565b61010d6101ba3660046108f3565b610642565b61010d610685565b6000546001600160a01b031661018c565b61010d6101e63660046108a5565b610697565b60055461018c906001600160a01b031681565b61012f61020c366004610881565b60026020526000908152604090205481565b61010d61022c366004610881565b61073d565b6102396107ca565b6005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f95faa39e28b11c7b6efeb8f394d6c96d0f08ad733b7ff855af52f44942310f5190600090a250565b6102986107ca565b6001600160a01b0381166102f35760405162461bcd60e51b815260206004820152601f60248201527f52657761726420746f6b656e2063616e2774206265203020616464726573730060448201526064015b60405180910390fd5b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f2d6b04df9b7d358407d1a014f1114b064add34c19d63d395db155a7e533e967a90600090a250565b6103526107ca565b6003546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b039091169063a9059cbb90339083906370a082319060240160206040518083038186803b1580156103b857600080fd5b505afa1580156103cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f0919061090c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561044e57600080fd5b505af1158015610462573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048691906108d1565b6104d25760405162461bcd60e51b815260206004820152600f60248201527f6661696c656420746f207377656570000000000000000000000000000000000060448201526064016102ea565b565b6001600160a01b0381166000908152600260209081526040808320546001909252822054610502919061097e565b92915050565b33600090815260026020908152604080832054600190925282205461052d919061097e565b33600090815260026020526040812080549293508392909190610551908490610925565b90915550506003546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156105bb57600080fd5b505af11580156105cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f391906108d1565b61063f5760405162461bcd60e51b815260206004820152600e60248201527f6661696c656420746f2073656e6400000000000000000000000000000000000060448201526064016102ea565b50565b61064a6107ca565b60048190556040518181527fe65c987b2e4668e09ba867026921588005b2b2063607a1e7e7d91683c8f91b7b9060200160405180910390a150565b61068d6107ca565b6104d26000610824565b6005546001600160a01b031633146106f15760405162461bcd60e51b815260206004820152600f60248201527f43616c6c6572206e6f742067616d65000000000000000000000000000000000060448201526064016102ea565b61271060045482610702919061095f565b61070c919061093d565b6001600160a01b03831660009081526001602052604081208054909190610734908490610925565b90915550505050565b6107456107ca565b6001600160a01b0381166107c15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102ea565b61063f81610824565b6000546001600160a01b031633146104d25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102ea565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561089357600080fd5b813561089e816109ab565b9392505050565b600080604083850312156108b857600080fd5b82356108c3816109ab565b946020939093013593505050565b6000602082840312156108e357600080fd5b8151801515811461089e57600080fd5b60006020828403121561090557600080fd5b5035919050565b60006020828403121561091e57600080fd5b5051919050565b6000821982111561093857610938610995565b500190565b60008261095a57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561097957610979610995565b500290565b60008282101561099057610990610995565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461063f57600080fdfea26469706673582212203257ec126e9367e94ce151a98ce6e7232669a36fbc48d634a3e13dbce3507e9b64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80634e71d92d116100975780639feb8f50116100665780639feb8f50146101d8578063c3fe3e28146101eb578063c884ef83146101fe578063f2fde38b1461021e57600080fd5b80634e71d92d146101a457806369ea1771146101ac578063715018a6146101bf5780638da5cb5b146101c757600080fd5b80632c4e722e116100d35780632c4e722e1461015557806335faa4161461015e578063402914f51461016657806347f6f34a1461017957600080fd5b80630b79736e146100fa57806310098ad51461010f578063144fa6d714610142575b600080fd5b61010d610108366004610881565b610231565b005b61012f61011d366004610881565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b61010d610150366004610881565b610290565b61012f60045481565b61010d61034a565b61012f610174366004610881565b6104d4565b60035461018c906001600160a01b031681565b6040516001600160a01b039091168152602001610139565b61010d610508565b61010d6101ba3660046108f3565b610642565b61010d610685565b6000546001600160a01b031661018c565b61010d6101e63660046108a5565b610697565b60055461018c906001600160a01b031681565b61012f61020c366004610881565b60026020526000908152604090205481565b61010d61022c366004610881565b61073d565b6102396107ca565b6005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f95faa39e28b11c7b6efeb8f394d6c96d0f08ad733b7ff855af52f44942310f5190600090a250565b6102986107ca565b6001600160a01b0381166102f35760405162461bcd60e51b815260206004820152601f60248201527f52657761726420746f6b656e2063616e2774206265203020616464726573730060448201526064015b60405180910390fd5b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f2d6b04df9b7d358407d1a014f1114b064add34c19d63d395db155a7e533e967a90600090a250565b6103526107ca565b6003546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b039091169063a9059cbb90339083906370a082319060240160206040518083038186803b1580156103b857600080fd5b505afa1580156103cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f0919061090c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561044e57600080fd5b505af1158015610462573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048691906108d1565b6104d25760405162461bcd60e51b815260206004820152600f60248201527f6661696c656420746f207377656570000000000000000000000000000000000060448201526064016102ea565b565b6001600160a01b0381166000908152600260209081526040808320546001909252822054610502919061097e565b92915050565b33600090815260026020908152604080832054600190925282205461052d919061097e565b33600090815260026020526040812080549293508392909190610551908490610925565b90915550506003546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156105bb57600080fd5b505af11580156105cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f391906108d1565b61063f5760405162461bcd60e51b815260206004820152600e60248201527f6661696c656420746f2073656e6400000000000000000000000000000000000060448201526064016102ea565b50565b61064a6107ca565b60048190556040518181527fe65c987b2e4668e09ba867026921588005b2b2063607a1e7e7d91683c8f91b7b9060200160405180910390a150565b61068d6107ca565b6104d26000610824565b6005546001600160a01b031633146106f15760405162461bcd60e51b815260206004820152600f60248201527f43616c6c6572206e6f742067616d65000000000000000000000000000000000060448201526064016102ea565b61271060045482610702919061095f565b61070c919061093d565b6001600160a01b03831660009081526001602052604081208054909190610734908490610925565b90915550505050565b6107456107ca565b6001600160a01b0381166107c15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102ea565b61063f81610824565b6000546001600160a01b031633146104d25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102ea565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561089357600080fd5b813561089e816109ab565b9392505050565b600080604083850312156108b857600080fd5b82356108c3816109ab565b946020939093013593505050565b6000602082840312156108e357600080fd5b8151801515811461089e57600080fd5b60006020828403121561090557600080fd5b5035919050565b60006020828403121561091e57600080fd5b5051919050565b6000821982111561093857610938610995565b500190565b60008261095a57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561097957610979610995565b500290565b60008282101561099057610990610995565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461063f57600080fdfea26469706673582212203257ec126e9367e94ce151a98ce6e7232669a36fbc48d634a3e13dbce3507e9b64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "sweep()": {
        "notice": "Remove all incentive tokens from this contract."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 705,
        "contract": "contracts/Reward.sol:Rewarder",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4890,
        "contract": "contracts/Reward.sol:Rewarder",
        "label": "available",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4894,
        "contract": "contracts/Reward.sol:Rewarder",
        "label": "claimed",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4897,
        "contract": "contracts/Reward.sol:Rewarder",
        "label": "xtc",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IERC20)1769"
      },
      {
        "astId": 4899,
        "contract": "contracts/Reward.sol:Rewarder",
        "label": "rate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 4901,
        "contract": "contracts/Reward.sol:Rewarder",
        "label": "game",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)1769": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}