{
  "address": "0x724b6902e66C9d05Dc9bAB42dEF68A6f4BCaD868",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "RewardTokenSet",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "accRewardPerShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastRewardBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "pendingReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimable",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "xtc",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x39144e89703c50cfdb0d86f21ef60e8b2e512630596c4401f9b066a7fd5462e7",
  "receipt": {
    "to": null,
    "from": "0x1604F1c0aF9765D940519cd2593292b3cE3Ba3CE",
    "contractAddress": "0x724b6902e66C9d05Dc9bAB42dEF68A6f4BCaD868",
    "transactionIndex": 0,
    "gasUsed": "744184",
    "logsBloom": "0x
    "blockHash": "0x804996b6b38b869b4bc6eec736fa78b0fb8e93969d1263093ecc667e3b66c9e9",
    "transactionHash": "0x39144e89703c50cfdb0d86f21ef60e8b2e512630596c4401f9b066a7fd5462e7",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 11526121,
        "transactionHash": "0x39144e89703c50cfdb0d86f21ef60e8b2e512630596c4401f9b066a7fd5462e7",
        "address": "0x724b6902e66C9d05Dc9bAB42dEF68A6f4BCaD868",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001604f1c0af9765d940519cd2593292b3ce3ba3ce"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x804996b6b38b869b4bc6eec736fa78b0fb8e93969d1263093ecc667e3b66c9e9"
      }
    ],
    "blockNumber": 11526121,
    "cumulativeGasUsed": "744184",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5aecb5f4f8e044c2faafbd94f8fd9c72",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"RewardTokenSet\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"accRewardPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRewardBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pendingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xtc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EquityFarm.sol\":\"EquityFarm\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/EquityFarm.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC20.sol\\\";\\n\\n// The equity farm is where you can stake xtc tokens in exchange\\n// for a share of the protocol fees.\\n\\ncontract EquityFarm is Ownable {\\n    struct UserInfo {\\n        uint256 amount;\\n        uint256 rewardDebt;\\n        uint256 claimable;\\n    }\\n    mapping(address => UserInfo) public users;\\n    IERC20 public xtc;\\n    uint256 public lastRewardBalance;\\n    uint256 public accRewardPerShare;\\n    uint256 private claimable;\\n    uint256 private constant PRECISION = 1e18;\\n\\n    event RewardTokenSet(address indexed token);\\n\\n    function setToken(IERC20 _token) external onlyOwner {\\n        require(address(_token) != address(0), \\\"Reward token can't be 0 address\\\");\\n        xtc = _token;\\n        emit RewardTokenSet(address(_token));\\n    }\\n\\n    function deposit(uint256 amount) external {\\n        UserInfo storage user = users[msg.sender];\\n        updateReward();\\n\\n        uint256 previousAmount = user.amount;\\n        user.amount += amount;\\n\\n        uint256 previousRewardDebt = user.rewardDebt;\\n        user.rewardDebt = (user.amount * accRewardPerShare) / PRECISION;\\n\\n        uint256 pending = (previousAmount * accRewardPerShare) /\\n            PRECISION -\\n            previousRewardDebt;\\n\\n        user.claimable += pending;\\n        claimable += pending;\\n        lastRewardBalance -= pending;\\n\\n        xtc.transferFrom(msg.sender, address(this), amount);\\n    }\\n\\n    function withdraw(uint256 amount) external {\\n        UserInfo storage user = users[msg.sender];\\n        require(user.amount >= amount, \\\"Invalid withdraw amount\\\");\\n        updateReward();\\n\\n        uint256 previousAmount = user.amount;\\n        user.amount -= amount;\\n\\n        uint256 previousRewardDebt = user.rewardDebt;\\n        user.rewardDebt = (user.amount * accRewardPerShare) / PRECISION;\\n\\n        uint256 pending = (previousAmount * accRewardPerShare) /\\n            PRECISION -\\n            previousRewardDebt;\\n\\n        user.claimable += pending;\\n        claimable += pending;\\n        lastRewardBalance -= pending;\\n        xtc.transfer(msg.sender, amount);\\n    }\\n\\n    function pendingReward(address account) public view returns (uint256) {\\n        UserInfo storage user = users[account];\\n        uint256 _totalxtc = xtc.balanceOf(address(this));\\n        uint256 _accRewardPerShare = accRewardPerShare;\\n        uint256 _rewardBalance = address(this).balance - claimable;\\n\\n        if (_rewardBalance != lastRewardBalance && _totalxtc != 0) {\\n            uint256 _accruedReward = _rewardBalance - lastRewardBalance;\\n            _accRewardPerShare =\\n                _accRewardPerShare +\\n                ((_accruedReward * PRECISION) / _totalxtc);\\n        }\\n        return\\n            (user.amount * _accRewardPerShare) /\\n            PRECISION -\\n            user.rewardDebt +\\n            user.claimable;\\n    }\\n\\n    function claim() external {\\n        UserInfo storage user = users[msg.sender];\\n        updateReward();\\n\\n        uint256 pending = (user.amount * accRewardPerShare) /\\n            PRECISION -\\n            user.rewardDebt;\\n        uint256 claiming = user.claimable;\\n        uint256 total = pending + claiming;\\n\\n        claimable -= claiming;\\n        user.claimable = 0;\\n        user.rewardDebt = (user.amount * accRewardPerShare) / PRECISION;\\n        lastRewardBalance -= pending;\\n        payable(msg.sender).transfer(total);\\n    }\\n\\n    function updateReward() public {\\n        uint256 rewardBalance = address(this).balance - claimable;\\n        if (rewardBalance == lastRewardBalance) return;\\n        uint256 accrued = rewardBalance - lastRewardBalance;\\n        accRewardPerShare += ((accrued * PRECISION) /\\n            xtc.balanceOf(address(this)));\\n        lastRewardBalance = rewardBalance;\\n    }\\n    fallback() external payable {}\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0xd357d50e5f32b7ff08512aeedf87903cc1c50e4efcf6eee9c494ec37fe52ff09\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c128061007e6000396000f3fe6080604052600436106100ca5760003560e01c8063939d623711610079578063f2fde38b11610056578063f2fde38b14610232578063f36c0a7214610252578063f40f0f5214610267578063fa4caa741461028757005b8063939d623714610198578063a87430ba146101bc578063b6b55f251461021257005b80634e71d92d116100a75780634e71d92d14610150578063715018a6146101655780638da5cb5b1461017a57005b8063144fa6d7146100d35780632e1a7d4d146100f357806347f6f34a1461011357005b366100d157005b005b3480156100df57600080fd5b506100d16100ee366004610ac9565b61029d565b3480156100ff57600080fd5b506100d161010e366004610b0f565b610357565b34801561011f57600080fd5b50600254610133906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015c57600080fd5b506100d1610523565b34801561017157600080fd5b506100d1610619565b34801561018657600080fd5b506000546001600160a01b0316610133565b3480156101a457600080fd5b506101ae60045481565b604051908152602001610147565b3480156101c857600080fd5b506101f76101d7366004610ac9565b600160208190526000918252604090912080549181015460029091015483565b60408051938452602084019290925290820152606001610147565b34801561021e57600080fd5b506100d161022d366004610b0f565b61062d565b34801561023e57600080fd5b506100d161024d366004610ac9565b610758565b34801561025e57600080fd5b506100d16107e8565b34801561027357600080fd5b506101ae610282366004610ac9565b6108cb565b34801561029357600080fd5b506101ae60035481565b6102a5610a12565b6001600160a01b0381166103005760405162461bcd60e51b815260206004820152601f60248201527f52657761726420746f6b656e2063616e2774206265203020616464726573730060448201526064015b60405180910390fd5b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f2d6b04df9b7d358407d1a014f1114b064add34c19d63d395db155a7e533e967a90600090a250565b33600090815260016020526040902080548211156103b75760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420776974686472617720616d6f756e7400000000000000000060448201526064016102f7565b6103bf6107e8565b8054828260006103cf8385610b9a565b909155505060018201546004548354670de0b6b3a7640000916103f191610b7b565b6103fb9190610b59565b60018401556004546000908290670de0b6b3a76400009061041c9086610b7b565b6104269190610b59565b6104309190610b9a565b9050808460020160008282546104469190610b41565b92505081905550806005600082825461045f9190610b41565b9250508190555080600360008282546104789190610b9a565b90915550506002546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018790526001600160a01b039091169063a9059cbb906044015b602060405180830381600087803b1580156104e357600080fd5b505af11580156104f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051b9190610aed565b505050505050565b33600090815260016020526040902061053a6107e8565b60008160010154670de0b6b3a7640000600454846000015461055c9190610b7b565b6105669190610b59565b6105709190610b9a565b600283015490915060006105848284610b41565b905081600560008282546105989190610b9a565b9091555050600060028501556004548454670de0b6b3a7640000916105bc91610b7b565b6105c69190610b59565b846001018190555082600360008282546105e09190610b9a565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610612573d6000803e3d6000fd5b5050505050565b610621610a12565b61062b6000610a6c565b565b3360009081526001602052604090206106446107e8565b8054828260006106548385610b41565b909155505060018201546004548354670de0b6b3a76400009161067691610b7b565b6106809190610b59565b60018401556004546000908290670de0b6b3a7640000906106a19086610b7b565b6106ab9190610b59565b6106b59190610b9a565b9050808460020160008282546106cb9190610b41565b9250508190555080600560008282546106e49190610b41565b9250508190555080600360008282546106fd9190610b9a565b90915550506002546040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526001600160a01b03909116906323b872dd906064016104c9565b610760610a12565b6001600160a01b0381166107dc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102f7565b6107e581610a6c565b50565b6000600554476107f89190610b9a565b90506003548114156108075750565b6000600354826108179190610b9a565b6002546040516370a0823160e01b81523060048201529192506001600160a01b0316906370a082319060240160206040518083038186803b15801561085b57600080fd5b505afa15801561086f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108939190610b28565b6108a5670de0b6b3a764000083610b7b565b6108af9190610b59565b600460008282546108c09190610b41565b909155505050600355565b6001600160a01b0381811660009081526001602052604080822060025491516370a0823160e01b8152306004820152929390928492909116906370a082319060240160206040518083038186803b15801561092557600080fd5b505afa158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d9190610b28565b600454600554919250906000906109749047610b9a565b9050600354811415801561098757508215155b156109c95760006003548261099c9190610b9a565b9050836109b1670de0b6b3a764000083610b7b565b6109bb9190610b59565b6109c59084610b41565b9250505b600284015460018501548554670de0b6b3a7640000906109ea908690610b7b565b6109f49190610b59565b6109fe9190610b9a565b610a089190610b41565b9695505050505050565b6000546001600160a01b0316331461062b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102f7565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610adb57600080fd5b8135610ae681610bc7565b9392505050565b600060208284031215610aff57600080fd5b81518015158114610ae657600080fd5b600060208284031215610b2157600080fd5b5035919050565b600060208284031215610b3a57600080fd5b5051919050565b60008219821115610b5457610b54610bb1565b500190565b600082610b7657634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610b9557610b95610bb1565b500290565b600082821015610bac57610bac610bb1565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146107e557600080fdfea2646970667358221220cab4db24ca16c9af13bdb515a844a26f93aa0120feaa5f90bce0aec03614ba9464736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100ca5760003560e01c8063939d623711610079578063f2fde38b11610056578063f2fde38b14610232578063f36c0a7214610252578063f40f0f5214610267578063fa4caa741461028757005b8063939d623714610198578063a87430ba146101bc578063b6b55f251461021257005b80634e71d92d116100a75780634e71d92d14610150578063715018a6146101655780638da5cb5b1461017a57005b8063144fa6d7146100d35780632e1a7d4d146100f357806347f6f34a1461011357005b366100d157005b005b3480156100df57600080fd5b506100d16100ee366004610ac9565b61029d565b3480156100ff57600080fd5b506100d161010e366004610b0f565b610357565b34801561011f57600080fd5b50600254610133906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015c57600080fd5b506100d1610523565b34801561017157600080fd5b506100d1610619565b34801561018657600080fd5b506000546001600160a01b0316610133565b3480156101a457600080fd5b506101ae60045481565b604051908152602001610147565b3480156101c857600080fd5b506101f76101d7366004610ac9565b600160208190526000918252604090912080549181015460029091015483565b60408051938452602084019290925290820152606001610147565b34801561021e57600080fd5b506100d161022d366004610b0f565b61062d565b34801561023e57600080fd5b506100d161024d366004610ac9565b610758565b34801561025e57600080fd5b506100d16107e8565b34801561027357600080fd5b506101ae610282366004610ac9565b6108cb565b34801561029357600080fd5b506101ae60035481565b6102a5610a12565b6001600160a01b0381166103005760405162461bcd60e51b815260206004820152601f60248201527f52657761726420746f6b656e2063616e2774206265203020616464726573730060448201526064015b60405180910390fd5b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f2d6b04df9b7d358407d1a014f1114b064add34c19d63d395db155a7e533e967a90600090a250565b33600090815260016020526040902080548211156103b75760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420776974686472617720616d6f756e7400000000000000000060448201526064016102f7565b6103bf6107e8565b8054828260006103cf8385610b9a565b909155505060018201546004548354670de0b6b3a7640000916103f191610b7b565b6103fb9190610b59565b60018401556004546000908290670de0b6b3a76400009061041c9086610b7b565b6104269190610b59565b6104309190610b9a565b9050808460020160008282546104469190610b41565b92505081905550806005600082825461045f9190610b41565b9250508190555080600360008282546104789190610b9a565b90915550506002546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018790526001600160a01b039091169063a9059cbb906044015b602060405180830381600087803b1580156104e357600080fd5b505af11580156104f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051b9190610aed565b505050505050565b33600090815260016020526040902061053a6107e8565b60008160010154670de0b6b3a7640000600454846000015461055c9190610b7b565b6105669190610b59565b6105709190610b9a565b600283015490915060006105848284610b41565b905081600560008282546105989190610b9a565b9091555050600060028501556004548454670de0b6b3a7640000916105bc91610b7b565b6105c69190610b59565b846001018190555082600360008282546105e09190610b9a565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610612573d6000803e3d6000fd5b5050505050565b610621610a12565b61062b6000610a6c565b565b3360009081526001602052604090206106446107e8565b8054828260006106548385610b41565b909155505060018201546004548354670de0b6b3a76400009161067691610b7b565b6106809190610b59565b60018401556004546000908290670de0b6b3a7640000906106a19086610b7b565b6106ab9190610b59565b6106b59190610b9a565b9050808460020160008282546106cb9190610b41565b9250508190555080600560008282546106e49190610b41565b9250508190555080600360008282546106fd9190610b9a565b90915550506002546040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526001600160a01b03909116906323b872dd906064016104c9565b610760610a12565b6001600160a01b0381166107dc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102f7565b6107e581610a6c565b50565b6000600554476107f89190610b9a565b90506003548114156108075750565b6000600354826108179190610b9a565b6002546040516370a0823160e01b81523060048201529192506001600160a01b0316906370a082319060240160206040518083038186803b15801561085b57600080fd5b505afa15801561086f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108939190610b28565b6108a5670de0b6b3a764000083610b7b565b6108af9190610b59565b600460008282546108c09190610b41565b909155505050600355565b6001600160a01b0381811660009081526001602052604080822060025491516370a0823160e01b8152306004820152929390928492909116906370a082319060240160206040518083038186803b15801561092557600080fd5b505afa158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d9190610b28565b600454600554919250906000906109749047610b9a565b9050600354811415801561098757508215155b156109c95760006003548261099c9190610b9a565b9050836109b1670de0b6b3a764000083610b7b565b6109bb9190610b59565b6109c59084610b41565b9250505b600284015460018501548554670de0b6b3a7640000906109ea908690610b7b565b6109f49190610b59565b6109fe9190610b9a565b610a089190610b41565b9695505050505050565b6000546001600160a01b0316331461062b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102f7565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610adb57600080fd5b8135610ae681610bc7565b9392505050565b600060208284031215610aff57600080fd5b81518015158114610ae657600080fd5b600060208284031215610b2157600080fd5b5035919050565b600060208284031215610b3a57600080fd5b5051919050565b60008219821115610b5457610b54610bb1565b500190565b600082610b7657634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610b9557610b95610bb1565b500290565b600082821015610bac57610bac610bb1565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146107e557600080fdfea2646970667358221220cab4db24ca16c9af13bdb515a844a26f93aa0120feaa5f90bce0aec03614ba9464736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 705,
        "contract": "contracts/EquityFarm.sol:EquityFarm",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3220,
        "contract": "contracts/EquityFarm.sol:EquityFarm",
        "label": "users",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(UserInfo)3215_storage)"
      },
      {
        "astId": 3223,
        "contract": "contracts/EquityFarm.sol:EquityFarm",
        "label": "xtc",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)1769"
      },
      {
        "astId": 3225,
        "contract": "contracts/EquityFarm.sol:EquityFarm",
        "label": "lastRewardBalance",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 3227,
        "contract": "contracts/EquityFarm.sol:EquityFarm",
        "label": "accRewardPerShare",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 3229,
        "contract": "contracts/EquityFarm.sol:EquityFarm",
        "label": "claimable",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)1769": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(UserInfo)3215_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct EquityFarm.UserInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(UserInfo)3215_storage"
      },
      "t_struct(UserInfo)3215_storage": {
        "encoding": "inplace",
        "label": "struct EquityFarm.UserInfo",
        "members": [
          {
            "astId": 3210,
            "contract": "contracts/EquityFarm.sol:EquityFarm",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 3212,
            "contract": "contracts/EquityFarm.sol:EquityFarm",
            "label": "rewardDebt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3214,
            "contract": "contracts/EquityFarm.sol:EquityFarm",
            "label": "claimable",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}